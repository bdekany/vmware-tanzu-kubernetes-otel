apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otelcol-syslog
spec:
  # Mounting our TLS cert+key generated by cert-manager
  volumes:
    - name: syslog-tls
      secret:
        secretName: syslog-otel-tls
  volumeMounts:
    - name: syslog-tls
      mountPath: /tmp/syslog/tls
  # Using contrib image for syslog and opensearch
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib
  config:
    extensions:
      # Logn/Pass for Opensearch
      basicauth/client:
        client_auth:
          username: admin
          password: admin
    receivers:
      # First syslog receiver for InCluster Monitorig (FluentBit Sink)
      syslog/incluster:
        protocol: rfc5424
        tcp:
          listen_address: "0.0.0.0:6514"
          tls:
            cert_file: /tmp/syslog/tls/tls.crt
            key_file: /tmp/syslog/tls/tls.key
      # Second syslog receiver for Hosts Monitorig (rsyslog from masters)
      syslog/hosts:
        protocol: rfc5424
        tcp:
          listen_address: "0.0.0.0:6515"
          tls:
            cert_file: /tmp/syslog/tls/tls.crt
            key_file: /tmp/syslog/tls/tls.key
    exporters:
      debug:
        sampling_initial: 5
        sampling_thereafter: 200
        verbosity: detailed
      # Export InCluster Monitorig (FluentBit Sink) to k8s-incluster index
      opensearch/incluster:
        http:
          tls:
            insecure_skip_verify: true
          endpoint: https://my-first-cluster:9200
          auth:
            authenticator: basicauth/client
        logs_index: k8s-incluster
      # Export Hosts Monitorig (rsyslog from masters) to k8s-hosts index
      opensearch/hosts:
        http:
          tls:
            insecure_skip_verify: true
          endpoint: https://my-first-cluster:9200
          auth:
            authenticator: basicauth/client
        logs_index: k8s-hosts
    processors:
      # Example to drop logs from worker nodes OR that are less than WARN
      filter/ottl:
        logs:
          log_record:
          - IsMatch(attributes["structured_data"]["instance@47450"]["group"], ".*worker.*")
          - severity_number < SEVERITY_NUMBER_WARN
    service:
      extensions: [basicauth/client]
      pipelines:
        logs/incluster:
          receivers: [syslog/incluster]
          exporters: [opensearch/incluster]
        logs/hosts:
          receivers: [syslog/hosts]
          processors: [filter/ottl]
          exporters: [opensearch/hosts]
          # exporters: [debug, opensearch/hosts]
---
# Create NodePort to access endpoint from outsite the cluster (syslog for OpsMan/TKGi)
apiVersion: v1
kind: Service
metadata:
  labels:
    app: otelcol-syslog-hosts-svc
  name: otelcol-syslog-hosts-svc
spec:
  ports:
  - name: syslog-6515
    port: 6515
    protocol: TCP
    targetPort: 6515
  selector:
    app.kubernetes.io/name: otelcol-syslog-collector
  type: NodePort
---
# Create Service to access syslog/incluster TLS
apiVersion: v1
kind: Service
metadata:
  labels:
    app: otelcol-syslog-incluster-svc
  name: otelcol-syslog-incluster-svc
spec:
  ports:
  - name: syslog-6514
    port: 6514
    protocol: TCP
    targetPort: 6514
  selector:
    app.kubernetes.io/name: otelcol-syslog-collector
